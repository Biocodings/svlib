#include "SeqFrag.h"

#include <iostream>

static int getRandomIndelSize() {

  const std::vector<int> s =      {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
				   2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,5,5,5,6,6,
				   2,2,2,2,2,2,2,2,2,2,3,3,3,3,4,4,4,4,4,5,5,5,6,6,
				   7,7,8,8,9,9,10,10,11,11,12,12,13,13,
				   14,15,16,17,18,19,20,21,22,23,24,25,26,
				   27,28,29,30,31,32,33,34,35,36,37,38,39,
				   40,41,42,43,44,45,46,47,48,49,50,
				   60,70,80,90,100,110,120,130,140,150,160,170,180,190,200,210,220,230,240,250,260,270,280,290,300,310,320,330,340,350,360,370,380,390,400,410,420,430,440,450,460,470,480,490,500,510,520,530,540,550,560,570,580,590,600,610,620,630,640,650,660,670,680,690,700,710,720,730,740,750,760,770,780,790,800,810,820,830,840,850,860,870,880,890,900,910,920,930,940,950,960,970,980,990,1000,
				   1010,1020,1030,1040,1050,100,1070,1080,1090,1100,1110,1120,1130,1140,1150,1160,1170,1180,1190,1200,1210,1220,1230,1240,1250,1260,1270,1280,1290,1300,1320,1340,1360,1380,1400,1420,1440,1460,1480,1500,1520,1540,1560,1580,1600,1620,1640,1660,1680,1700,1720,1740,1760,1780,1800,1820,1840,1860,1880,1900,1920,1940,1960,1980,2000};
  
  size_t rr = rand() % s.size();
  return s[rr];
}

void SeqFrag::addScrambledEnds(size_t left_len, size_t right_len) {

  std::vector<std::string> TCGA = {"T","C","G","A"};
  
  std::string left, right;
  for (size_t i = 0; i < left_len; ++i) 
    left += TCGA[rand() % 4];
  for (size_t i = 0; i < right_len; ++i) 
    right += TCGA[rand() % 4];
  
  left_scramble = left;
  right_scramble = right;

  m_seq = left + m_seq + right;

}

void SeqFrag::spikeMicrobe() {

const char* PSUEDO = "CAAAAAGACATTTTTTTTGGGATATTAAGATTTCCTAGGATAGAAATCAAATTATTAGATAATTTTTGTATATATTTTAA"
"ATATGTCTTAAAAAAATGTCTTTTTGTCTAAATATATTAAGCTTTTCATTTTTACATCGACAAATTTAGATATTTTTAGA"
"CATTTTGGGTATTTTTTTAGACATTTTTAAAATATTTTAGACAGAATTGTATTATGATCCTATTTTTAGACCTAAATATA"
"TGCAAAATTATCATATCGTCGTGGAGTGTTACCAAGTAATTCACTATATTGATACAAATCATTACCTCTATAATCTGGTT"
"TAAAGGGAAGTTCTTTAATTGGTTCTTTCTTATCCTCTTTTTTATCCTCATCATTACCTTTATGAGCATTGTTTCTACAC"
"ATGTATTTGACTAGAAAGAAAAATAATATAAACAATATTATAAGTACTATAAAAGTAAATATACATATTTTGATCATCAT"
"TTTGTTACCAATTTCATTACCAACTTCCTTGCCTATAACGCTGAACGCATTATATGCAATGGGATCCATCGCGAAAGGAT"
"TTTCCATTACTATCTATTATATCATTACATAATTGTTTATTGTTCTATAAATAATAAACAAATATACACTATTAGATAGT"
"TTTTACCATCCAAATTCTTTCATAAACTCATTAATATCTTCTATTGACTTGCATTCTTCTAGTTCAATCCAATATATTGG"
"TGTTTCTGGATCAATTTCTTCGTTTTCCTCTTCTTGTTTATCAAGATATTCTATTAGATCATTCTCTGCTCTGTTTCTCA"
"ATGATTCAAGTTTTTTCTGTTCTTTTTTCAAGAGTTTTTTACTCACACTAAATTTACCATACATTAATATATAATACTAT"
"AAAATACTATATATTAATTATCTTTATATCATTTTATATTAATTTATATTATTTTGATAAATTTTCCACGTATTTATAAT"
"AATCATTAAATGTTCCTGATCTTACCGATTGATATTTGTTACGAACAGATTGTTGTTGTTCTTCAGTAGTTTTATCCCAT"
"TCATCAACCATAATATTTCTAAAATTGGTTTTTGGTGCGACTATTTCTAATTTTTTTTTGTATGAATTAGCTTCTCTTTT"
"GAATTTAGCAATATCACTCAACATAAGATTTTTAAGATCCTTTTCTATGAGTAGTTGTTCTTCCAATTCTGTAACGGTTA"
"ATATTTTTTCCCTAGTCGTTATAAAAGCTTTTTCAAGAGCCATCGCTAATTGATCATATGATACAAAATTTTCATCATCT"
"ATATTTTCTAATACTTCTTCAGCATTTCTTTTAATTTTTTTAGCTTTACTTGCCATTATATATACTATATTTACATATAA"
"TTATTTATCATTATCATTAATAAAAAAATCAACCATTTCTTTTAGATTATTCTTTTTTTTTAGAGTAGATATTAAGTTAT"
"AATTTTGTATAATTTAGGTTGTTTATGGGATTTTTTAGGTTTATTTTCTGTAACAGACATGAACATTGATCCACCATGTT"
"GATCATTATCATCATCAAGAAGATCATCAACATTATCATTATAATTATCGGCCTCATTTAATTCATTTTCATCAGTATTA"
"TAATTTCCAGATGATTGATTATCATCATCACTTTCATTATCACTTTCATCACTGACGTCAAAGATAACTTCTTTTTTTGA"
"TTTAACAATCTTTGGTGTTTTTTTAACCATTTTTTTGCCTCTTTTTGACTTAGATTTGACTGGTTCTATCTCAGTTTCTG"
"ATTCAACTTCCTCATCGGATTCATTATCAGATTCATTATCAGATTCTTCTGATTCACTTGATTCATCTCTAGATTTTGAT"
"ATTTTTTTGGTTGTTCTATTCAATTCCTCTTTCATCATTTTTCTGGTTTTATAAAAAATTGGTTTACTGATTCCAGCTTT"
"CTTACAAGCTTGAACCACTGTCAAACCACCTTTCAAATAATATGATTCGGCTTTTTCATATAATATTTTATTTCGTCGGT"
"ATCTTAGGTTTTCTAGAACAGACATGTCCTTTATTATACCTAAATAATATTATTTTTATACCAAAACAGATCCTTTATCA"
"TATACACATAATTCGGATCCAATCCGATTTTTTACTTTGATAAAAAGGCGAAAAATAATCAAAGTAAAAAGTAAGAAATA"
"TTAAATATATGCATAATATAATATTATAATGTCGCATAATTGTCAAAATAGTAATGAACCTGATACAGTGTATTATGATA"
"TAGTTATCCCATATAATCCCAATGATTCTGGTTTAAGCCCAGCAACATTCCAAGCACAGTTAACACAACCATTGCTTTAT"
"AATCCTGACAAATATTACCTGAGTGTAGTGAGGTTCAGTATTCCGACCCAATATGTACCCTTAATGATACCTGAAATACA"
"ACCTTTTCCAAATACTAATGTTAATAATACCATATATTCAGTTACACTAGAGTATAATGGTGTATTTTCATCTCAAACAT"
"TTGTACAATATGATGTATCTTTAACTAATCCTAATGATACTCCTCCACCTCCTCCAACAATCAATAATAGGACAGTAGAA"
"CCAACAGCCTATTATTATGTTTATAATTTCTCGCCATTTTTACAAATGATCAACAAAGCACTTTCTGATGCTTTTACTGA"
"AATTACTATGCCAGTTGGCGCAGTTGCTCCATATTTTGTATACAGTCCGGTCACACAAAGGATTAGTTTAGTAGCACAGA"
"GGCAATTTTATGATAGAAATTTAGCGCAACCTATTAGAATATATTGTAATGAGGCATTATTCCCATTTTTAGATGGAATA"
"CCATTTGGAGGACTTGATTTTAATAGTGTTGATGGGCGTGATATATTATTCAATGTGGAAAATTTAGGTAATAATTTGGT"
"TCAAAATCAGCTAACGGCTCCAGCATATCCTCCTGAATTTATCCAAATGGAACAAGAATATGCTACACTTTCTAACTGGA"
"ATGCTATAAAAACTATCCAATTAGTATCCAATCTTTTACCTATTAATAGAGAATTTATCCCATCATTTAGAAATACTAAT"
"GTAGGTGTAGTTAATTCACAAGGTATTTTAGCAGACTTTGTACCATTGGTAACACTTGGGCCAGAATCTAGAACCAGTAT"
"AGATTATGTTGCAAATGGTCCTTGGAGATTAATAGATATGTTTGGAGGAGTACCTATAACAATGGTTGATTTATCAGTAT"
"ATTGGACAGATCAAATAGGAAGACGATTTGTGTTAGATGTACCCAGAGGTAGAATAGCAACCTGTAAATTAATATTCATT"
"AAGAAGGATCTGGCAGGTCACACTCTATCTCGGAAATAATAGATAGTTAATGTTTCATCAAAATATAATATAATAATATA"
"GTATATTAAGAATATGTCAAATAGTGCTGTACCTTTAAATGTTGTAGCAATTCAAGAACCCCGTCTTGAACTTAATAATG"
"AAAGAACTTGGGTAGTGGTTAAAGGTGGTCAACAAGTCACCTATTATCCTTTCCCTTCAACTTCTTTCAGCTCTAATCAA"
"TTTAATTTCATTTGTAATCCTCCTTCAGCACAAACTGTATTGGATCGATTAGCATTCATTCAAGTTCCTTATGATATCAC"
"TTTCAATGTTAATCCTGCTCATGCTGGTGTAACTGACAATCTTTTACAACCTGGTCGTGATGCTTTCCGTGCTTTCCCTA"
"TTAGTTCTATTACTAATACTTTAACTGCAACCATTAATGGTTTCCCTGTGAATATTGAATTAGGACAAATTATTCACGCT"
"CTTAGCAGATATCATACTCCTCTTAAACTTAAAAATGGATGGATGTCTATGCAACCTTCTTTTGAAGATAATTATCAATC"
"ATATCGTGATGCTGATGCCACTAATAACAATCCTTTAGGTGATTTTACAAGCGCATCTGGTCTTTCTGAGCTTCCAAGAG"
"GATCATATTCCATGAATGTTGTGTCAAATACTCCTACTACTGCTAGAATTACTGGTGTACTTTATGAACAAGTATTCCTT"
"CCTCCATTTATTTGGGATGAACATCAAGCTGGTGGTCTTGCAAATCTAACCAGTTTAACCTTCAATTGGGTACTAAATAA"
"TAATCTTGCTAGAATATGGTCTCATTCAGATATTACTAATGATGTTTCTGGAAACAGTACTATTGGTTCAATGAATGTCA"
"GCTTCCAACAACCCTCAATGTATCTTGGATTTGTTACTCCTCGATTAAATATTCCTATTCCTCCCAGAATAACTTATCCT"
"TATTTCAAACTTTCAAGATACACTACACAATTCCAAAATACTCTTGCTCCCAATGCAACCAGTACTTACAAATCTAATAT"
"TGTTCAACTTGATTCTATTCCAAGGAAACTTTATGTATTCATGAAACAATCTGATTCAGTGATTTATCAAAATCTCAATA"
"ATCAAATTACCACTCCTGATGTATTCCTACAAATCAATTCTCTCAATTTAACTTGGAACAATCAACAGGGTGTTCTTTCT"
"GGAGCATCTGCACAAAATTTATATGACTTCAGTGTTCAAAATGGTTACAACAAGACTTGGACTGAATTTAATGGTCTTAC"
"ACAACAATTATCAGGAGTCTCTGGATCACCTACCAAAGTAATTGGTCTTGAAGGAGGAATAGTTTGTCTCGAATTAGGTA"
"AAGATGTAGGATTACGTGACGATGAAGCTGAAGGTGTGCTTGGTAATTTCAATTTACAAGTACAAATGACTTGCACTAAT"
"ACTAATCAATATCTCACAATCGTACCTGATATGTATATTATTGCAGTATATGATGGTACTCTTGTTATCTCTAATACTAG"
"TGCTATGGCATCAATTGGTGTTGCCTCTAAAGAAGAAGTATTAAATGCTCCCATTAATCATAGCATGTCATATCACGAAT"
"TACAAACTGTATATGGAGGAGATTTCTTTAGCACATTTAAGAATTTCCTTGGAAAAGCCGCTAATGTAGCCGGAAAGGTA"
"AATAATTTTCTCAAAGATTCAAAAGTAGCTAGTTCTGTGCTAGGAGCTATTCCTCATCCTTATGCTCAAGTTCCTGGACA"
"AATTTTAAGGAATATTGGTTATGGTGAAGGTGGAGTATCTGCTGGTGGTGTTGTTGCTGGATCTGGAAGAAGAAAGAAAG"
"GTGGAGTATTAGTAGGAGGCAGTGAATGTGAAGGTGGAAGATATATGTCCAAAGCTGAATTAAAGAAAGCTTTACGAATG"
"TAAACACTATTAAATATAATATTGGTTAATAATATATTTAATATGAACATCAGAATAAAAGATTATTTCGATCATCCTTT"
"TATTAAATTTGATCCAAGGGAAGTTAAACCAATTGAATCATATACTCAAGAACAAATCAGTAATATCAAATTATTATCTG"
"TTACTTCTGATCCTACACAAATGGCAAGACCTTTTGGATCTGCTACATATCGTATTCAAAAATATCCTGGAGATTTAGAT"
"TTACAAGAGGAATTCATTGATTGTTGTTCCATAAATGAGGTTGTTAAAACATTTGCTAAGAGATTACAAAAAATAGTCAC"
"CAATATCAAAAAAAATAAGTTACATTATTTTTCAGAGGTAAAAGCTGGGATTGATATTAGATACGATATTGATATTGGCA"
"TAATAACTAGTGGAGTGTATATTCCCAGTTTTAATTTGATCCAAAAAATACAATCAATGTATCGAAAAGGATTATTAGAT"
"GATGAAGAATACAATACTTTATCTACAGCATTATCAAAACCTAATTTAGATGGTGATGTATATGACGTCGTTCATCATAT"
"TTTGAGAGAACGTAAAATATTGAGATGGTCACAAGAAGAGGTGTTATTGGGTACAAAAAGTCTTCCTTTAGGGAAAAAAA"
"TAAAGCTATCTGAAGCATTGAAGGCAAAATCACATGTAAAAATAGACATGATATCACTCATTAATAATCAGTTTGTTGAG"
"GTAACTAATTTCTATATTTTGATTTATGTCGATTTGAAGAAAAATACTTTGGAGACTGTTAATTTTAATTTCGATTATCT"
"TGATAACAACATACTTACCAAACAATATGATATGCAAATCAAAGAGGAAGTACAAAAATTGTATTACTCTGATATGTATT"
"ACAGTGCTTTCAAGATGGTCAAAAGAATGTGGGCATATTCAAGAGCTTTTAGAAATATGGAAGATGTCAATATATTATTA"
"CCTATTGTAAGTGGAAATATATCATTATTGTATCAGATTGTGAGTGAATTATCCACTATTGTGAGACTTTATGAAGTCAG"
"TAAATCAACTCCCGAAACAACAATAGATAAAAGATTAGATTCATTAGCCTATAAATTAGCTGATGTAACAGAAATAGATA"
"AAGAATCATTGATACATATCACAGATATAATTGATAGTTTGAAGAATTATAAAGGAATCAACAAAGCAATCCAAATAAAT"
"CAGTTTGTAATTAAACCATTGAAAAGATATATCAATGCTTTAACTATAGATGAATTGGAAGAAATAGGTTTTAATCCTCC"
"TCCTCCTAGATTTTTACCATATCCTTTGAAATATGCTCCTATTGTTAGATATCCTTTTGAGGATGTTGAAAACCCTTTGA"
"AGCAATACTAGAAGTGTTTATTTGTAAAAAAGCCAAAAAACAAATTAAAACAGATCAAAAGACTATTTGTCTAAAATATT"
"TTAAAAATGTCTAAAAAATGTCTAAATTTGTCGATGTAAAAATGAAAAGCTTCATATATTTAGACAAAAAGACATTTTTT"
"AGACATTTTTAAGATATATACAAAAATTATCTAATATTTTGATTTCTATCCTGGAAAATCTTAATATCCCAAAAAAAATG"
"TCTTTTTGTCTAAATTATTAAGCTTTTCATTTTTTACGCCGATATTTTTGACATTTTAGACAAATAATCATCAAAATAAT"
"ATGTGATCAATATGCTAATTTATAATATTTCTTTCTAAGCTTTCTATATTTTGCCTTTAAATGCTCATATTTATTCTCTA"
"ATTTATCCATTGCTTCATTGTGTTTCTTTGATTTCTTGTGATTAGAAGAATTACTTTTGGCATAAACTGCTCCACAAATA"
"GTACATTTCACTTTTTCCTTGTAATATTCCCTTTGTTTTTCCTTATTTGCTTCATAATATTTTTTATGATACTCATTTTT"
"TGATATGTCCATTATATTATAATATATTATTTTATATTAATATAATATTATTTTATATTATTTAGTATTATAGAGTAAAT"
"AATATAAAAAATAATTTACTCTATTAAAATGATGAAACAATAATATAGCTAATCTACCTCAATATCTGCTAGTATATCTA"
"TTTTTTTAATACCCTTCCAGAACCTAAAAGTGGATCTACCTTCCACTAATTTTAGTTCATCGCGGAGTATATCATTGAAT"
"CTGTTTAATGATATATCCTTAAATTCTTTGTGTGAATTTTTAAATTTTTTCATATCAGACACTGGTACTTTATCATTATC"
"TTTACCAGTGATTTCATAGTGCTCTTTAATGGTTTCAATAACAATATCATTTTGTTTTGTTTCAGCAGTCCATTTTTCTT"
"TGACTTCAGGATCAAATTCAGGCATACCATTTTTCAAATAATCTTGGTATGCATCAAGGAAAAGATGTATAAATCCTTTC"
"ATGAAATCTTTGGTCTCAAATTTTGATTCAATATTATTATCTTTGAGTTTGTAATAAGGTTTTTTATCGACATCTTCTTC"
"ATCAACAAAAACATAAGGAAATTCATTATATACTAATCTATTCATTACAGCTTGATCAAAAGGTTCAATATTAGGAACAT"
"CATTGAACATACAAAAAACAGTAAAATTAGGTTTGAAACTTTCTTCTGATTCTTGATGTTCTCTACCTACAATATTATCT"
"CCACCAGATGCAAGTCTTTTTATCATAATACCATCAAGAACAGAACCTTTCATTGGCATTTCATTTGACATTAATATTCT"
"AGTATGTGCAAGTTTATATGCCCATCTAAATTTTGCTGCTTCATCTCTTGAGTCATTCTTTTGATATAATAAATTTGCAC"
"CATTAAAATCACCAATATAACCTCCAAAACAATATTGTAACATCATAATTAAATATGATTTGCCAGCATTTGATCTCCCA"
"GGACAAAAATACATTTTTTTGAGTTTAATATCGCCAGCTAATGCACAAGCTAATGCTGTTATCATAGGTTTTGGATTATC"
"AAACAATTTCTTGAATGATAATCGATATGCTTTTTTGACCAAATCTTTGTCATATTTAGGGAATTTGTACGGCACACCAC"
"ATTTGAAAACTATTTTTGGATCAAATCCCTCAGTAAATGTTCCAGTCTTGAAATTATATATACCATCTTTAAATAAAAGA"
"TATCCTAATGACGATTTTGCAGTTCTTTTTAACCAATTATTATCCTCTGATACGTCTTTAACAAAACCTACAACCTTTTC"
"TCTTAATGTATGATCTGTACCATAATTTTTGGTTTTATGAACACCATTTTTATCAGTGGAAATAATAACATTGAGATACA"
"TTTGATGTTTTCTCAAATAGCGGAAAAGTATATGATTATTATCATCAAACATACCAGTATTTTCATCAAATATGTATAAC"
"TTTTTGTTACAGAATTTGAATTTTTCTGCTCCTTCTAATTCGAACAATTTTTCCTGACAATCACAATCACTGCTAACATA"
"AATACTATGATCTGGTACTTCAAAATCCAATTCATAGTTCATTGGTTTTTCTTCTAGATTAATCTTGTATTCTGTCTTAT"
"CATAGACATATTTTTCACAACCTTTCAATAAAACCTTAATATCCTCATCAAAGGAGTTAATCAACATACCATCAAAGCAT"
"AATGTACTCACTTTAATTTTTTTGCTAGTGAAATAATCATACATTGCCATTAAACACTTATGTTCTAATCGTTGTGCTAA"
"TATGGATAATACTACTGCTAATTTATTCTTACAATCATTATTATCCTTGATTTTCTCATAAAGACTTGTTTCTTTTTTAG"
"CTACTTTTTCAGCTATGTATTCTGCTTCTTCCTTAAATTTTGTGAGGAATTTTAATTTTTTGGTTGGTGTGTAGCTTTCA"
"CCATTATCATTAGTCAATTTATATGAACCAAGATAACATAATTTCAAGATCAGTTCTTTTGCCTTGTCTCTTGATATTTT"
"ATGGAAACTACTTATGTCTTCGAGTATCTTTTCTCTTCTATTGACATAATCAACTAAATATGGACACAATATGTCTTTTT"
"TTTTACAATATTGTGTAATCAATGTAGGATGTGAGTTTTTCATATCAATATCAGTATTAATTCCATTATTGATAAACCCT"
"CTAATACTCTTTTTGAAGGACTGAAGACTTTGTCCCTTCTCAGCATATACCCTACCAGTATCTTCTAATTTATCTGAATA"
"GTAATATTTCACCTTGACATATCCTATTTCATCTCCCTCTTCACGTTTTGTCTTGAACACTTTCTTGTAGTATGCACTTA"
"ATTGTCTCTGAATGTCTTCATCTAAATCTTCTGCTGATAACAATCTCTTCAAGTTTTTCATACTAATTGTTTCTGTCAGT"
"TTAATCACTGGCTTAACCACTTTCTTTTCAATTTTCTTAGTCACTTTCTTCTGTGTCTTACTCATTGTTTACTAGTATAT"
"ATGGTACTAGATATATTATTTTTATATCATTTTATATTATTATATAGTGAAAAAATATTCAATATTATTTCTATAGTTTG"
"AGCGTAATCTTTCGGCCTTACAATCCAACTTATACCCCCTTTTCTACGCTGTCTCAAAAATTTTGTGATGCGAATATATC"
"CGTATCATAAAATTGTCACATGCTCGTTAATGAGCATGTCATGTAAAAATGTCATCAGCTGATTAATAAGCCGCTGAAAA"
"ATACCAATATAATGGGAACTGAACAGCCGAAACTTCGGAAATATGACTGATATTTCCGAACCCTCTCCCTGTTCAGTTCC"
"TACTACAAATCAACTATATCACGTCCTTATCCATATATCATCATACTCTTTCTTATGACCAAATACCATCATATACACAT"
"AATTAAACATACTTATTATATTTGACACTAAATACTCAATCGGATTCATCTTCTTCATCTTCACTAACTAACACTTGATT"
"TTTTTTTACAAAGAATGTCGGATATTCATTCTCTAAATATTTGTATTGTTTTTCGGTGATATTACTTATTTTCTTTAATT"
"CTGACATTTGGTTTTGTAAATCAAGCATTTGTTTGTACATCTCATTCATATTATGTAATTCATAGATTTTTCTCATATAT"
"ATTTGTGTTTGTGATTCATTTTCTTTTTTCAGTTTCTCATTTTCTTTACTGACCTCATTTAATTCCCTTTTCAAATCATT"
"ATTTTCTGATTTAATCTCATTCAATTGTCTATGAAACATAATATTATTATCATTCATACTCGTTTGAAGTGATACTCTTA"
"GATCATTTTTGTTCTTATTGGTTTGATCAATCTCTTGATACAATGTATTAATACAAGATTGTAATTTTTGTTTACAATCT"
"TCGGGTAGCTTTACCAATATTTGTGAGATAATATTATTGATTTCCTCTTTATTTGACATCATATTGATAAGGTTATATTT"
"TATATTATTTTTTCAATCAACGGAATATCTCGTAAATGGTACAAACATTCGGCCTTATAAAAATAATATTATGTAATAAT"
"ATTACAATGGCTAAATTATATAAACTAGAGCTTGATGATTTGTTAAATGAGGACTTAAATGAGGCTGTCAAAATCAAAAA"
"AGGATTTGACAGGAATATTAATTTTATGAAGATTAAGAAAAAATTACTTCGATCATTAAAGGTGAATTGTGCTATTGTCA"
"ATGACAAAGAGGAGAGTGATTATAATAAAAGAATATCAACTACTAGAATAATATACATCATCATTGCACTTTTACAACTC"
"AGAAATTGTTCCAGAATATCAGAAGCTGTTGCTGCTATCAAGAAATTCTCTGTCAAAAAAAATCTAAATGAAAGGGTGTT"
"AGTAAAGATAGCTAAATCTGAAAAAAGAATAGTGGATAGGAAAACAAAGGAAGTATATGAAACTAAGCCAAGATATCGTG"
"AAATGATTTTCCCTCTAGCATGGGTTGATAAGAAACTATTCAAAAAAATCATAAAAGATGATCAATGGGCCAAATTCAAT"
"AACAATAAAGAACCCAGAAAACGTGTGCTTGACTACCTTTTAAATAATTTTGATTGTAATACTCATTCATTAAGATATGC"
"TGGAATTAATTTTATGTTGAATGAAAAAAAGGTTCCTATGAACATTATCGCTAAATTTGTTGGTCATGTTAATACAGAAC"
"AACTTGTTACATATACTCAACATCAAGCATTGGATGATGTTTTTGCTATGGATGTGTAAAAAGGCACCTCGATTATCCGG"
"GGTATGTAGACATTGTCTTATCTTTTTTTATCTTTTTTTATCTTTGTAATTCTGTTGTACAATGTAGGTGTTTTTGCAAA"
"GATAAACATTTTAAATGGTCATCATAGTGATTATCTCGTCTGGCTTGGCTTTATAATATTTACACATCTGATCAATGAAA"
"TTTTTGAACTCATATATACTTAAATGCCTCAAAAGTATCCTAATCACACACCATCTACCACACGTTTTAATATCATTTGC"
"TCTCTTTTGGAATTTAAATTCGTTGTAATGTAATTCATACGGACACTCTAACAGGAGTAATGATAGATATGGATAATATT"
"GGTTTGATATTTTTCTGAAATGTAGAGGAATAAATTTGAGGCTATTATCGGGATATCCTCCATAGCTATTGAAAAATTCT"
"ATGGTATTTTCATCTCTCTTGAATAAGCAACACCAGTGACCAAAGTTCTTTTTAGCTTCAAACAATAATATACATGCACC"
"ATATGGACCTAATACCTCATCAATAGAATTGTAGTTAATCAAATCTGGATACAAAACTATTTGTGCTTTATTATCTAACA"
"TACCTAAAATATCGGTATTTGAAAGGGCTACATTTTCATAATGTTTGATAGTTTTCATTTTATTATAATTATATGATAAT"
"AAAATAAAATACTTCATACAGTTAGACCATATATGTTATGCTAAATGGATTGAATCCAGAACCTCCAATACCAGTAGTAA"
"ATTGACCAAGATTATTGTCTTTGTAAACAACTATTTGACCATTTGATAATAGTGTTATTAATCCAGGATTAACTGGCCTA"
"TTTCCATCATCAATCACAAATATTTCAAAATCTACTTGAATATTGGTGGTTGGTCTTAAATCAGCTGGTAATGCTCCAAT"
"AGCTGAATTTATTACAGCTGATGATGTTGCATTTGCTTGGAAAGGAGGAAATGTTAGATTGACAAGATTATTTATTTTAG"
"TGTATGCAACATTTTGTACTAATGGTGATGCCCATGGACCTGAAAGAGATAGGGAAAATGATCCAGTTGTCAAAGAAATA"
"TTGCTAACTGCTTGAGTAATATCAGAAGCACCATACATTAAATGAGGAGGAGTAAAATTACTATTACTCCAGACTGTATT"
"AGTATTTCCTGTTGGATTTGCTGGAACATTTGTCAGAGTATTAGATTTATTATTAATGTTGTACAGATTTGGTTGTAGTA"
"ATGATGATATTGACATATATTATTATAATTAGATTCTAAATATATTTAGTGTAAATCCGCTTGCATTGGGTTGTATTTCC"
"CCTCCTGAATTTGCAAAAGCGATAAAAATATTGTCTGATGGTGTCATATCAATAATACCATTTAGAGATGCACTCATTTG"
"AATTCCAGCTCCTGAATAAATTACTGCCGTATTATAGACAGCTGTTCCACCATTTTTGAATATAGATATGATTAATGATC"
"CATCTAATGTACCGATTGAGGTACCAATATATGTTACAGCAACATAAAATGGAGCAGTTTCCGTGGTGGTGAACACACCG"
"TCGACATAGGAACAATTACCACCTAATGTTTTTGTGGTAAAAGCAACAGTACCAGTTGATACTTCTGGAATTGATGCTTG"
"CGTGCCACCACTTGTTTCATATGTCGGTAAATCTCCAGAAAAATAAGTTCCTGAACCAACTGTTCCACCTGTATTACCTT"
"TTGGACCCATTTCACCCTTAATTCCAACCCCAATATCACCTTTATCACCCTTTAACCCGTTAGTTCCGGGATCACCTTTG"
"TCACCTTTTGGACCTGATGAACCAGTACCACTATTCAAATCAGCTGAACCAAACATTAAATGAGGCGGATTAAAAGCATT"
"ATTACTCCATAAAGTATTGGATGCTGATGTTGGATTGGTGGGTAAATTTGTGAGAGAATGTGATTTAGAATTAATATTAT"
"ATGTATTTGGTTGCAATAATATTGATACAGACATAATTATATTATCAAGATGATATAATTATTTCTCATAACTAACCAGG"
"AGGAATAAAATATTGTCCTGTTATGTAAATTAAGACTGTTATTGATGTTGATGCTTGTATTTTCATACTTAACACAATCT"
"CTGGTGTAGCTGCTGTAGCTGTTACAATACCATATTGTACAACACCTGTAGATGCACCTGTTATTGAAGCTGTTCCAATC"
"ACATTATTACCATTAAAATCACCACTAGCAACTGGAATAGAAAAATATATTATTCCTTGTGCCATATTAGCAGGAATTGT"
"TGCGTTTGTACAAATACTAAATGTTACAATATTACCTATTCTCGAATAAATAGATGTTGTTGGTGAAACACTTGTAAATA"
"TTTGTGTGAATGAAACTGTTGGTGTCCAAATTCCTGATGATAATACTACTGCTGAACCTACATCACCTTTTAATCCCTTA"
"TCACCCAAATTACCTTTTAATCCATTTGTACCAGTATCTCCTTTTAAACCTTTATCTCCACTTCCTGTTTCCCCTTTTAA"
"ACCATTTATACCTGCATCACCTTTTAATCCTTTATCTCCACTCCCAGGATCTCCCTTTAATCCATTTGATCCAATATCTC"
"CTTTGAGACCATCTAAACCTGCATCACCTTTTAATCCTTTATCGCCACTTCCAGGATCTCCTTTTAATCCATTTGATCCA"
"ATATCTCCTTTTAATCCATTTGATCCAATATCTCCTTTTAATCCATTTGTTCCAGCTTCTCCTTTATCACCCTTTTCCCC"
"TTTGTCTCCACCACCACCACCGCCGTTGGATAAATCTGTGGAACCAAACATTAAATGAGGTGGATTATGAGCATTATTAC"
"TCCATATTGTATTACTCAAATTAGTGGGATTTGATGGTAAATTATTAAGAGTATGTGATTTAGAATTAATATTGTATGTA"
"TTAGGTGAAAATAATGTGGATAACGACATATATTAATATTATATTATTAAATATGATATTAATTATTCTATTTACTTCTT"
"ACTTTTGCATTTTTAATACTTTAAGTATTATTTTTTACCCTTATGATTTTTTCTACTCTGAACAGGTTTTTGCTTAGGTT"
"GTTCCTCTTCTTCTTCATCACTTTCTTGTTCAGTCATAATTTTCAATCGGTGTTTTTGGTTCTCTAATTCTTGTCGGTAT"
"GCTTTAAATTCTCTATTCATTCTTGATTTAATTTTACTTGTTCGATGTGCTCTGAATTCTCTAAGTTTTTTCTCATCATT"
"AATATCTTCAATCAAATCATCTAATTGTTCTGTTGTCATATTGTCAAATAAATTATATAACGCATCCATATCAAATGGTT"
"TTTCTACTCGTGGCATACCTCCACTATTGATCACTATCTCATTATTTTCATTATTGAATGGTGTGTAATTCATTATTATA"
"TTATATATACATATATTTTTATCCTATTTTGACACATAATAGATACTTAATCTATCCATAAATCATAATATCACGAAGTT"
"TTTTATTCATTTTTTGATAGACTTGACATACTTCTGTTTTTCTATGTTTAGGTCTATTGGATCTTGTGTATGTTTTTCCA"
"CAAAATTCACAAATCAATACATCATTTGGATGTGCTTTAACTTTTTCTTCACCATATGTTCTCCCATTGTACGAATCTTT"
"GTACACATTTTGACCATTTTTTTTCCCAATTGGACCTGGTCTTTGATTGAATCTTAATACACAAGTTGGTTGTCCAGCAT"
"CCTCATTACGAATAACTTTATTTTTATATACTGCTTTTGGTACTGGTGTTTGTATATATTTCAATTCTTTTCTATTCATT"
"CGAGTTAATTCTTTTTCTTCTGCGAAATCATATGGTATATCTCTTTTTAGCATTTAATATTACCTATAATATTTTTTTAC"
"TAGTTACTGACGGAATAGAATTAGTATTAGAATTACTCTCAAATAATAAATATATACATAGGAATTTAATTTATCAACTT"
"TTTATATAAAATAAATGTTATCCTACATAAAATATGATAAATTTAGCAAGCCTTTTGCCAAAATCAGTGGAGGGAAATAC"
"AAGGGAAAAATGGCATATGTGAATGAAGAAAATGATAAAGGACGTAATGAATTAAAGCTACCCGAGGGTAAATTTGTACC"
"ATATCCTAATCCTTTAACTAGAGAAGTAGTTTATGTAGCCGGACAAAGTGGTAGTGGTAAATCTACCTACGCAGCACAAT"
"ATATCTACAACTACAAGAAATTATTTCCAGCTAACAAGGTGTTTGTGTTTTCAAGGTTAGAAATGGATCAAATATTAGCA"
"TCACTTGGATGTATTCAAATACCTATTGATGAAGAACTATCAGAAATGGACGCAATTAGGGATATAAAGAATGCATTATG"
"TTTGTTTGACGATATTGATACAATCAAAGACAAGAATCTAAAGAATTGTGTTTATGATATTCAAAATGATATTCTTGAAA"
"CTGGACGTCATAAAAATATATATATTCTTGTCACATCCCATTTGATTAATGGTAATGATAAAAAAAATTCTAGAACTATC"
"CTCAATGAAGCCCATAAAGTGACATTCTTTCCAAAGAGTGGTTCGTATGCCATAAATTATTTCCTCAAAAACTACATTGG"
"AATACCTAAAAAAGACATAGATGAGATCTTAAAGATAAAATCAAGGTGGATCACTATCAATAAAGGTTATCCTTTGTACA"
"TATTTTATGAAACGGGGGCAAAAACTATATAAATTTTATCTTATTATTTACCCCCAACAATCTTGGGGTCGAACAATCTT"
"CGGGTATTTAATTGTCTAAAAAAAGGAATTTCGCGCCATTTAACTGATAAACAATCATAATTGATGATATTTTTACTATT"
"TACTTTGATGAAATTTCCACTAATAGTAGTAAAAATTTATATTGGACAGAAATCTAGCCAACCCTTTTCTTCTTGGTAGG"
"TTTCTTTTTGGATTTCTTCTTGGCCTTTTCTATCTCTTTCTCAGCCTTTTCTGCTTCATTCTCTAGCTTGGTAACAATTT"
"TCTTTTGAGCAAGCATTTTCTTAACTAGTTTGTCTTTTTTAACCAATAATGCCTTTAATTTTACCTGTGATGCTTTGATC"
"AATGATTTTTTCATAGTATCATCATCGACAATTAATTTAAGGTTTTTATATTGTTTAATCAATATTTTAGCATCATCCTG"
"TAATTTCTTATATTTGAGTATTTCTTTGGTCAAATCGAGTTTCTTTTTACCAGCATTCTCCAATAATTTTGGATCAACAC"
"TATATCTACCATACATCCTGACTTGATTTGCCTTAAGACACTGCTCTGGAGTACCAGCTTTTTTACCTTTCGGTATCTTT"
"CCTATACCACAATACATTTTTAAGATATAATTAGATCATAAAAATGTATAAAGATTACATATTCATTAATTCTTCCAAAA"
"TTCTTTGATCATTATTGGACATTTTGGGTGATCGTTTAGTTCTTTTGGATCCTCCTTTCAAAGATTTCTTGACAGGTTTT"
"TTCTTAGTAATTTTCTTGGTTTTACTACCAGAACTCTTTTTCTTGGTTGTTTTACCAGATTTCTTTTTCAAAGCTTCATA"
"TTGTTTCTTGGCTTTGGGACTTTGCATAGCTTCACCATATTTCATACCATGTTCTTTAGCAAATTTCTGTAAAAATGCTA"
"CCCATGGTGATTTCTTAGCACCAGCTTTTGTACCAATACCACCTTTCTTAACCCTACGTTTGACCGTTCTACCACCTGAT"
"AATACACCTGCTAAAACACCTCCTACTTCAGTGCCACAATTGGGACAAAAACATCCTCCTCTTGGAGCAGTTCCAGATAA"
  "TAATACTTTCTTAGACATAATAATATTATATGATATTATTAATAATCACGCATTTACATAATTATGATCATAATTATTGT";


 std::string phage(PSUEDO);

 int start = rand() % (phage.length() - 1000) + 500; 
 int width = 300;

 std::string to_insert = phage.substr(start, width);

 // get the center point
 int center = m_gr.Width() / 2;
 phage_site = center;
 phage_string = to_insert;

 m_seq = m_seq.substr(0, center + left_scramble.length()) + to_insert + 
   m_seq.substr(center + left_scramble.length(), m_seq.length() - center - left_scramble.length());
 
}

void SeqFrag::addIndels(size_t n) {

  if (n == 0 || m_seq.length() < 5000)
    return;

  size_t spacing = m_seq.length() / (n+1);
  spacing = std::max((size_t)5000, spacing);
  std::vector<int> breaks;
  for (size_t i = spacing; i < m_seq.length() - 5000; i += spacing) {
    breaks.push_back(i);
  }  
  breaks.push_back(m_seq.length() - 1);

  if (spacing <= 30) {
    std::cerr << "Simulated indel spacing < 30. Should be > 30, reduce number of indels" << std::endl;
    exit(EXIT_FAILURE);
  }

  if (breaks.size() < 2)
    return;

  if (m_gr.strand == '-') // flip it back to process, then flip at end
    SeqLib::rcomplement(m_seq);

  std::vector<std::string> TCGA = {"T","C","G","A"};

  // set up for the loop
  int del_cumsum = 0;
  int ins_cumsum = 0;
  std::vector<std::string> frags;
  frags.push_back(m_seq.substr(0, spacing));

  for (size_t i = 0; i < breaks.size() - 1; ++i) {

    // random size for events
    int ds = getRandomIndelSize();
    
    char etype = (rand() % 2 ? 'D' : 'I');
    //etype = ds >= 50 ? 'D' ? 'I'; // events above 50 are always dels
    //char etype = 'D';

    // get the bounds
    int start = etype == 'D' ? breaks[i] + ds : breaks[i];
    int end = breaks[i+1];

    std::string ins_string = "";
    if (etype == 'I') {
      if (ds < 50) { // random sequences for small insertions
	for (int i = 0; i < ds; ++i) 
	  ins_string += TCGA[rand() % 4];
      } else { // tandem duplications for large
	int len;
	std::string chrstring = m_gr.ChrName(SeqLib::BamHeader());
	char * seq = faidx_fetch_seq(m_index, const_cast<char*>(chrstring.c_str()), m_gr.pos1 + breaks[i], m_gr.pos1 + breaks[i] + ds -1, &len);
	ins_string = std::string(seq);
	//std::cerr << ins_string.length() << " " << ds << std::endl;
      }
    }
    
    
    std::string lead_base = m_seq.substr(breaks[i]-1,1);
    std::string ref_seq = (etype == 'D' ? m_seq.substr(breaks[i], ds) : "");
    std::string alt_seq = (etype == 'D' ? "" : ins_string);

    // make the indel object
    Indel ind(ds, etype, ref_seq, alt_seq, lead_base);
    if (etype == 'D')
      ind.gr = SeqLib::GenomicRegion(m_gr.chr, m_gr.pos1 + breaks[i]-1, m_gr.pos1 + breaks[i] + ds-1);
    else
      ind.gr = SeqLib::GenomicRegion(m_gr.chr, m_gr.pos1 + breaks[i], m_gr.pos1 + breaks[i] + 1);
    ind.frag_id = frag_id;

    // check that it's not on a blank region
    if (breaks[i] < 101 || m_seq.substr(breaks[i] - 100, 200).find("N") != std::string::npos) {
      start = breaks[i]; // don't put in the del or insert
      etype = 'D';
    } else {
      // store the indel and update reference counter
      m_indels.push_back(ind);
      if (etype == 'D')
	del_cumsum += ds;
      else
	ins_cumsum += ds;
    }

    // cut the sequence out
    if (etype == 'D') {
      frags.push_back(m_seq.substr(start, end - start));
    } else {
      // make the random insertion
      frags.push_back(ins_string + m_seq.substr(start, end - start));
    }

  }

  std::string new_seq;
  for (auto& i : frags) {
    new_seq += i;
  }

  if (m_gr.strand == '-') // flip back if need be
    SeqLib::rcomplement(new_seq);
  
  m_seq = new_seq;

}

void SeqFrag::getSeqFromRef(faidx_t * findex) {

  int len;
  std::string chrstring = m_gr.ChrName(SeqLib::BamHeader());
  char * seq = faidx_fetch_seq(findex, const_cast<char*>(chrstring.c_str()), m_gr.pos1-1, m_gr.pos2/*-1*/, &len);
  
  if (!seq) {
    std::cerr << "Failed to get reference sequence at " << m_gr << std::endl;
    return;
  }
  
  m_seq = std::string(seq);

  // reverse complement if need
  if (m_gr.strand == '-') {
    SeqLib::rcomplement(m_seq); 
  }
}

int SeqFrag::getLeftSide() const {

  if (m_gr.strand == '-')
    return m_gr.pos2;
  return m_gr.pos1;

}

int SeqFrag::getRightSide() const {

  if (m_gr.strand == '-')
    return m_gr.pos1;
  return m_gr.pos2;


}

std::ostream& operator<<(std::ostream& out, const SeqFrag& s) {
  
  out << s.m_gr << "\t" << 
      s.m_seq.length() << "\t"
      << (s.right_scramble.length() ? s.right_scramble : "N");
  return out;
}
